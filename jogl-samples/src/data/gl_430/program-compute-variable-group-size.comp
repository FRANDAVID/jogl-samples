#version 420 core
#extension GL_ARB_compute_shader : require
#extension GL_ARB_shader_storage_buffer_object : require
#extension GL_ARB_compute_variable_group_size : require

#define INPUT	0
#define OUTPUT	1

precision highp float;
precision highp int;
layout(std140, column_major) uniform;
layout(std430, column_major) buffer;
layout (local_size_variable) in;

layout(binding = INPUT) uniform sampler2D input;
layout (binding = OUTPUT) writeonly uniform image2D output;

void main()
{	
    vec2 size = vec2(textureSize(input, 0));
    vec2 index = gl_GlobalInvocationID.xy;
    vec2 texCoord = index / size;

    vec4 texel = texture(input, texCoord);

    vec4 inverted = vec4(1.0 - texel.rgb, texel.a);

    vec4 color = (gl_WorkGroupID.x + gl_WorkGroupID.y) % 2 == 0 ? texel : inverted;
    imageStore(output, ivec2(index), color);
}