#version 420 core

precision highp float;
precision highp int;
layout(std140, column_major) uniform;
layout(quads, equal_spacing, ccw) in;

struct Vertex
{
    vec4 color;
};

in gl_PerVertex
{
    vec4 gl_Position;
    float gl_PointSize;
    float gl_ClipDistance[];
} gl_in[];

layout(location = 0) in Vertex stIn[];

in Block
{
    vec4 color;
} blIn[]; 

out gl_PerVertex
{
    vec4 gl_Position;
    float gl_PointSize;
    float gl_ClipDistance[];
};

layout(location = 0) out Vertex stOut;

out Block
{
    vec4 color;
} blOut; 

vec4 interpolate(in vec4 v0, in vec4 v1, in vec4 v2, in vec4 v3)
{
    vec4 a = mix(v0, v1, gl_TessCoord.x);
    vec4 b = mix(v3, v2, gl_TessCoord.x);
    return mix(a, b, gl_TessCoord.y);
}

void main()
{	
    gl_Position = interpolate(gl_in[0].gl_Position, gl_in[1].gl_Position, gl_in[2].gl_Position, gl_in[3].gl_Position);
    stOut.color = interpolate(stIn[0].color, stIn[1].color, stIn[2].color, stIn[3].color);
    blOut.color = interpolate(blIn[0].color, blIn[1].color, blIn[2].color, blIn[3].color);
}

